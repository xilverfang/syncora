version: '3.8'

services: 
  syncora-cli:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - SYNCORA_DB_URL=postgres://syncora:syncora123@postgres:5432/syncora_db?sslmode=verify-ca&sslcert=/app/certs/client.crt&sslkey=/app/certs/client.key&sslrootcert=/app/certs/ca.crt
      # Development
      # - SYNCORA_DB_URL=postgres://syncora:syncora123@localhost:5432/syncora_db?sslmode=verify-ca&sslcert=/app/certs/client.crt&sslkey=/app/certs/client.key&sslrootcert=/app/certs/ca.crt
    volumes:
      - ./certs:/app/certs:ro
      - ./.env:/app/.env:ro
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - syncora-net

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=syncora
      - POSTGRES_PASSWORD=syncora123
      - POSTGRES_DB=syncora_db
      - POSTGRES_INITDB_ARGS=--auth-host=md5
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./certs:/var/lib/postgresql/certs:ro
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    command: >
      postgres
      -c ssl=on
      -c ssl_cert_file=/var/lib/postgresql/certs/server.crt
      -c ssl_key_file=/var/lib/postgresql/certs/server.key
      -c ssl_ca_file=/var/lib/postgresql/certs/ca.crt
      -c ssl_crl_file=
      -c ssl_ciphers='HIGH:MEDIUM:+3DES:!aNULL'
      -c ssl_prefer_server_ciphers=on
      -c ssl_min_protocol_version='TLSv1.2'
      -c hba_file=/var/lib/postgresql/certs/pg_hba.conf
    ports: []
    # Development
    # ports:
      # - "5432:5432"
    networks:
      - syncora-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U syncora -d syncora_db && psql -U syncora -d syncora_db -c 'SELECT 1 FROM accounts LIMIT 1;' || psql -U syncora -d syncora_db -c 'SELECT 1;'"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  postgres-data:

networks:
  syncora-net:
    driver: bridge